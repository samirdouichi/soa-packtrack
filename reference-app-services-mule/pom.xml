<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>reference-app-services-mule</artifactId>
	<name>jpacktrack Spring-CXF Mule</name>

	<version>1.0</version>
	<packaging>war</packaging>

	<properties>
		<mule.version>3.1.2</mule.version>
		<eclipsePluginVersion>2.5</eclipsePluginVersion>
		<vmtype>org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType</vmtype>
		<jdk5Name>J2SE-1.5</jdk5Name>
		<jdk.version>1.6</jdk.version>
		<mule.home>C:\projet_spring\deploy\mule-standalone-3.2.0</mule.home>
	</properties>

	<build>
		<!-- Use a newer version of the install plugin than what your Maven uses 
			by default. The older version failed to install the project if there was 
			no target/classes folder. Since we use mule packaging on the project we actually 
			create and attach the zip that must be installed. -->
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.mule.tools</groupId>
				<artifactId>maven-mule-plugin</artifactId>
				<version>1.7</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>${artifactId}-${version}</finalName>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>${eclipsePluginVersion}</version>
				<configuration>
					<!-- by default download all sources when generating project files -->
					<downloadSources>true</downloadSources>
					<classpathContainers>
						<classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER/${vmtype}/${jdk5Name}
						</classpathContainer>
					</classpathContainers>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-idea-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<jdkName>${jdk.version}</jdkName>
				</configuration>
			</plugin>
			<!-- make sure that MULE_HOME is set when building (required below when 
				copying the artifact to Mule's apps directory -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireProperty>
									<property environment="env">mule.home</property>
									<message>You must set MULE_HOME before installing the example.</message>
								</requireProperty>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- automatically deploy the artifact after it has been built -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>package-app</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<copy file="${project.build.directory}/${build.finalName}.zip"
									todir="${mule.home}/apps" overwrite="true" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- plugins for creating site reports -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<configuration>
					<configLocation>http://mulesoft.org/download/attachments/92/checkstyle.xml?version=1
					</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<targetJdk>${jdk.version}</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<configuration>
					<tags>
						<tag>TODO</tag>
						<tag>@todo</tag>
						<tag>FIXME</tag>
						<tag>@fixme</tag>
						<tag>@deprecated</tag>
					</tags>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<links>
						<link>http://java.sun.com/j2ee/1.4/docs/api</link>
						<link>http://java.sun.com/j2se/1.4.2/docs/api</link>
						<link>http://java.sun.com/j2se/1.5.0/docs/api</link>
					</links>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</reporting>

	<!-- Mule Dependencies -->
	<dependencies>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>1.8.1</version>
		</dependency>

		<dependency>
			<groupId>org.mule</groupId>
			<artifactId>mule-core</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule</groupId>
			<artifactId>mule-core</artifactId>
			<version>${mule.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-builders</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.modules</groupId>
			<artifactId>mule-module-scripting</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-vm</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-servlet</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-stdio</artifactId>
			<version>${mule.version}</version>
		</dependency>

		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-quartz</artifactId>
			<version>${mule.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.mule.transports</groupId>
			<artifactId>mule-transport-ajax</artifactId>
			<version>3.4.0</version>
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>mule-deps</id>
			<name>Mule Dependencies</name>
			<url>http://dist.codehaus.org/mule/dependencies/maven2</url>
		</repository>
	</repositories>

	<parent>
		<groupId>com.sjo.jpacktracke</groupId>
		<artifactId>reference-app</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>
</project>